/** @file
  Differentiated System Description Table Fields (DSDT)

  Copyright (c) 2022, Ventana Micro Systems Inc. All Rights Reserved.<BR>

  SPDX-License-Identifier: BSD-2-Clause-Patent

**/

#include <Platform/Acpi.h>

Scope (\_SB)
{
  /* _OSC: Operating System Capabilities */
  Method (_OSC, 4, Serialized) {
    CreateDWordField (Arg3, 0x00, STS0)
    CreateDWordField (Arg3, 0x04, CAP0)

    /* Platform-wide Capabilities */
    If (LEqual (Arg0, ToUUID("0811b06e-4a27-44f9-8d60-3cbbc22e7b48"))) {
      /* OSC rev 1 supported, for other version, return failure */
      If (LEqual (Arg1, One)) {
        And (STS0, Not (OSC_STS_MASK), STS0)

        If (And (CAP0, OSC_CAP_OS_INITIATED_LPI)) {
          /* OS initiated LPI not supported */
          And (CAP0, Not (OSC_CAP_OS_INITIATED_LPI), CAP0)
          Or (STS0, OSC_STS_CAPABILITY_MASKED, STS0)
        }

        If (And (CAP0, OSC_CAP_CPPC_SUPPORT)) {
          /* CPPC revision 1 and below not supported */
          And (CAP0, Not (OSC_CAP_CPPC_SUPPORT), CAP0)
          Or (STS0, OSC_STS_CAPABILITY_MASKED, STS0)
        }

      } Else {
        And (STS0, Not (OSC_STS_MASK), STS0)
        Or (STS0, Or (OSC_STS_FAILURE, OSC_STS_UNRECOGNIZED_REV), STS0)
      }
    } Else {
      And (STS0, Not (OSC_STS_MASK), STS0)
      Or (STS0, Or (OSC_STS_FAILURE, OSC_STS_UNRECOGNIZED_UUID), STS0)
    }

    Return (Arg3)
  }

   Name (PLPI, Package () {  /* LPI for Processor, support 2 LPI states */
     0,                      // Version
     0,                      // Level Index
     1,                      // Count
     Package () {            // WFI for CPU
       1,                    // Min residency (uS)
       1,                    // Wake latency (uS)
       1,                    // Flags
       0,                    // Arch Context lost Flags (no loss)
       0,                    // Residency Counter Frequency
       0,                    // No parent state
       ResourceTemplate () { // Register Entry method
         Register (FFixedHW,
           64,               // Bit Width
           0,                // Bit Offset
           0x00000000,       // Address
           4,                // Access Size
         )
       },
       ResourceTemplate () { // Null Residency Counter
         Register (SystemMemory, 0, 0, 0, 0)
       },
       ResourceTemplate () { // Null Usage Counter
         Register (SystemMemory, 0, 0, 0, 0)
       },
       "LPI1-Core"
     },
   })

  Device (C000)
  {
      Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
      Name (_UID, 0)  // _UID: Unique ID
      Name (_CPC, Package()
        CPPC_PACKAGE_INIT (100, 32, 30, 8, 8, 1)
      )

      Name (_PSD, Package () {
        Package ()
          PSD_INIT (0)
      })

      Method (_LPI, 0, NotSerialized) {
        Return (\_SB.PLPI)
      }
  }
  Device (C001)
  {
      Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
      Name (_UID, 1)  // _UID: Unique ID
      Name (_CPC, Package()
        CPPC_PACKAGE_INIT (100, 32, 30, 8, 8, 1)
      )

      Name (_PSD, Package () {
        Package ()
          PSD_INIT (1)
      })

      Method (_LPI, 0, NotSerialized) {
        Return (\_SB.PLPI)
      }
  }
  Device (C002)
  {
      Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
      Name (_UID, 2)  // _UID: Unique ID
      Name (_CPC, Package()
        CPPC_PACKAGE_INIT (100, 32, 30, 8, 8, 1)
      )

      Name (_PSD, Package () {
        Package ()
          PSD_INIT (2)
      })

      Method (_LPI, 0, NotSerialized) {
        Return (\_SB.PLPI)
      }
  }
  Device (C003)
  {
      Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
      Name (_UID, 3)  // _UID: Unique ID
      Name (_CPC, Package()
        CPPC_PACKAGE_INIT (100, 32, 30, 8, 8, 1)
      )

      Name (_PSD, Package () {
        Package ()
          PSD_INIT (3)
      })

      Method (_LPI, 0, NotSerialized) {
        Return (\_SB.PLPI)
      }
  }
  Device (C004)
  {
      Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
      Name (_UID, 4)  // _UID: Unique ID
      Name (_CPC, Package()
        CPPC_PACKAGE_INIT (100, 32, 30, 8, 8, 1)
      )

      Name (_PSD, Package () {
        Package ()
          PSD_INIT (4)
      })

      Method (_LPI, 0, NotSerialized) {
        Return (\_SB.PLPI)
      }
  }
  Device (C005)
  {
      Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
      Name (_UID, 5)  // _UID: Unique ID
      Name (_CPC, Package()
        CPPC_PACKAGE_INIT (100, 32, 30, 8, 8, 1)
      )

      Name (_PSD, Package () {
        Package ()
          PSD_INIT (5)
      })

      Method (_LPI, 0, NotSerialized) {
        Return (\_SB.PLPI)
      }
  }
  Device (C006)
  {
      Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
      Name (_UID, 6)  // _UID: Unique ID
      Name (_CPC, Package()
        CPPC_PACKAGE_INIT (100, 32, 30, 8, 8, 1)
      )

      Name (_PSD, Package () {
        Package ()
          PSD_INIT (6)
      })

      Method (_LPI, 0, NotSerialized) {
        Return (\_SB.PLPI)
      }
  }
  Device (C007)
  {
      Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
      Name (_UID, 7)  // _UID: Unique ID
      Name (_CPC, Package()
        CPPC_PACKAGE_INIT (100, 32, 30, 8, 8, 1)
      )

      Name (_PSD, Package () {
        Package ()
          PSD_INIT (7)
      })

      Method (_LPI, 0, NotSerialized) {
        Return (\_SB.PLPI)
      }
  }
  Device (C008)
  {
      Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
      Name (_UID, 8)  // _UID: Unique ID
      Name (_CPC, Package()
        CPPC_PACKAGE_INIT (100, 32, 30, 8, 8, 1)
      )

      Name (_PSD, Package () {
        Package ()
          PSD_INIT (8)
      })

      Method (_LPI, 0, NotSerialized) {
        Return (\_SB.PLPI)
      }
  }
  Device (C009)
  {
      Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
      Name (_UID, 9)  // _UID: Unique ID
      Name (_CPC, Package()
        CPPC_PACKAGE_INIT (100, 32, 30, 8, 8, 1)
      )

      Name (_PSD, Package () {
        Package ()
          PSD_INIT (9)
      })

      Method (_LPI, 0, NotSerialized) {
        Return (\_SB.PLPI)
      }
  }
  Device (C00A)
  {
      Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
      Name (_UID, 10)  // _UID: Unique ID
      Name (_CPC, Package()
        CPPC_PACKAGE_INIT (100, 32, 30, 8, 8, 1)
      )

      Name (_PSD, Package () {
        Package ()
          PSD_INIT (10)
      })

      Method (_LPI, 0, NotSerialized) {
        Return (\_SB.PLPI)
      }
  }
  Device (C00B)
  {
      Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
      Name (_UID, 11)  // _UID: Unique ID
      Name (_CPC, Package()
        CPPC_PACKAGE_INIT (100, 32, 30, 8, 8, 1)
      )

      Name (_PSD, Package () {
        Package ()
          PSD_INIT (11)
      })

      Method (_LPI, 0, NotSerialized) {
        Return (\_SB.PLPI)
      }
  }
  Device (C00C)
  {
      Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
      Name (_UID, 12)  // _UID: Unique ID
      Name (_CPC, Package()
        CPPC_PACKAGE_INIT (100, 32, 30, 8, 8, 1)
      )

      Name (_PSD, Package () {
        Package ()
          PSD_INIT (12)
      })

      Method (_LPI, 0, NotSerialized) {
        Return (\_SB.PLPI)
      }
  }
  Device (C00D)
  {
      Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
      Name (_UID, 13)  // _UID: Unique ID
      Name (_CPC, Package()
        CPPC_PACKAGE_INIT (100, 32, 30, 8, 8, 1)
      )

      Name (_PSD, Package () {
        Package ()
          PSD_INIT (13)
      })

      Method (_LPI, 0, NotSerialized) {
        Return (\_SB.PLPI)
      }
  }
  Device (C00E)
  {
      Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
      Name (_UID, 14)  // _UID: Unique ID
      Name (_CPC, Package()
        CPPC_PACKAGE_INIT (100, 32, 30, 8, 8, 1)
      )

      Name (_PSD, Package () {
        Package ()
          PSD_INIT (14)
      })

      Method (_LPI, 0, NotSerialized) {
        Return (\_SB.PLPI)
      }
  }
  Device (C00F)
  {
      Name (_HID, "ACPI0007" /* Processor Device */)  // _HID: Hardware ID
      Name (_UID, 15)  // _UID: Unique ID
      Name (_CPC, Package()
        CPPC_PACKAGE_INIT (100, 32, 30, 8, 8, 1)
      )

      Name (_PSD, Package () {
        Package ()
          PSD_INIT (15)
      })

      Method (_LPI, 0, NotSerialized) {
        Return (\_SB.PLPI)
      }
  }
} // Scope(_SB)
