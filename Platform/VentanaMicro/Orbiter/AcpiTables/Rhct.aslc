/** @file
*  RISC-V Hart Capabilities Table (RHCT)
*
*  Copyright (c) 2022, Ventana Micro Systems Inc. All Rights Reserved.<BR>
*
*  SPDX-License-Identifier: BSD-2-Clause-Patent
*
**/

#include <IndustryStandard/Acpi65.h>
#include <Platform/Acpi.h>
#include <Platform/MemoryMap.h>
#include <Platform/Soc.h>

#ifndef OFFSET_OF
#define OFFSET_OF(TYPE, Field)  ((UINT32)__builtin_offsetof(TYPE, Field))
#endif

#define ISA_STRING "rv64imafdch_zicbom_zicboz_zba_zbb_zbc_zbs_smaia_ssaia_sscofpmf_sstc_svinval_svnapot_svpbmt_smstateen"

#define RISCV_RHCT_HART_INFO_NODE_DATA(ACPIUid) {\
    { \
      EFI_ACPI_6_5_RISCV_RHCT_HART_INFO_NODE, \
      sizeof (EFI_ACPI_6_5_RISCV_RHCT_HART_INFO_NODE_STRUCTURE) + 4 * 2, \
      EFI_ACPI_6_5_RISCV_RHCT_HART_INFO_NODE_STRUCTURE_VERSION, \
      2,  \
      ACPIUid, \
    }, \
    OFFSET_OF(EFI_ACPI_6_5_RISCV_RHCT_TABLE, IsaNode), \
    OFFSET_OF(EFI_ACPI_6_5_RISCV_RHCT_TABLE, CmoNode), \
  }


#pragma pack (2)
typedef struct {
  EFI_ACPI_6_5_RISCV_RHCT_ISA_NODE_STRUCTURE IsaNodeHeader;
  UINT8                                      IsaString[sizeof (ISA_STRING)];
} EFI_ACPI_6_5_RISCV_RHCT_ISA_NODE_STRUCTURE_DATA;

#pragma pack ()

//
// RISC-V Hart Capabilities Table (RHCT)
//
#pragma pack (1)
typedef struct {
  EFI_ACPI_6_5_RISCV_RHCT_HART_INFO_NODE_STRUCTURE      HartInfoHeader;
  UINT32                                                IsaOffset;
  UINT32                                                CmoOffset;
} EFI_ACPI_6_5_RISCV_RHCT_HART_INFO_NODE_STRUCTURE_DATA;

typedef struct {
  EFI_ACPI_6_5_RISCV_RHCT_TABLE_HEADER                  Header;
  EFI_ACPI_6_5_RISCV_RHCT_ISA_NODE_STRUCTURE_DATA       IsaNode;
  EFI_ACPI_6_5_RISCV_RHCT_CMO_NODE_STRUCTURE            CmoNode;
  EFI_ACPI_6_5_RISCV_RHCT_HART_INFO_NODE_STRUCTURE_DATA NodeInfo[ORBITER_NUM_CORE];
} EFI_ACPI_6_5_RISCV_RHCT_TABLE;

#pragma pack ()

EFI_ACPI_6_5_RISCV_RHCT_TABLE Rhct = {
  {
    ORBITER_ACPI_HEADER (
    EFI_ACPI_6_5_RISCV_RHCT_TABLE_SIGNATURE,
    EFI_ACPI_6_5_RISCV_RHCT_TABLE,
    EFI_ACPI_6_5_RISCV_RHCT_TABLE_REVISION
    ),
    0, // reserved
    100000000, // TimerFreq. FIXME: Patched on ready to boot
    2 + ORBITER_NUM_CORE, // NumNodes: ISA + CMO + Harts
    OFFSET_OF(EFI_ACPI_6_5_RISCV_RHCT_TABLE, IsaNode), // NodeOffset
  },
  { // ISA Node
    {
      EFI_ACPI_6_5_RISCV_RHCT_ISA_NODE, // Type
      sizeof (EFI_ACPI_6_5_RISCV_RHCT_ISA_NODE_STRUCTURE_DATA), // Length;
      EFI_ACPI_6_5_RISCV_RHCT_ISA_NODE_STRUCTURE_VERSION, // Revision
      sizeof (ISA_STRING) - 1, // ISA length
    },
    {
      ISA_STRING, // Data
    },
  },
  {
    EFI_ACPI_6_5_RISCV_RHCT_CMO_NODE, // Type
    sizeof (EFI_ACPI_6_5_RISCV_RHCT_CMO_NODE_STRUCTURE), // Length;
    EFI_ACPI_6_5_RISCV_RHCT_CMO_NODE_STRUCTURE_VERSION, // Revision
    6, // CBOM Block Size
    6, // CBOP Block Size
    6, // CBOZ Block Size
  },
  {
    RISCV_RHCT_HART_INFO_NODE_DATA(0),
    RISCV_RHCT_HART_INFO_NODE_DATA(1),
    RISCV_RHCT_HART_INFO_NODE_DATA(2),
    RISCV_RHCT_HART_INFO_NODE_DATA(3),
    RISCV_RHCT_HART_INFO_NODE_DATA(4),
    RISCV_RHCT_HART_INFO_NODE_DATA(5),
    RISCV_RHCT_HART_INFO_NODE_DATA(6),
    RISCV_RHCT_HART_INFO_NODE_DATA(7),
    RISCV_RHCT_HART_INFO_NODE_DATA(8),
    RISCV_RHCT_HART_INFO_NODE_DATA(9),
    RISCV_RHCT_HART_INFO_NODE_DATA(10),
    RISCV_RHCT_HART_INFO_NODE_DATA(11),
    RISCV_RHCT_HART_INFO_NODE_DATA(12),
    RISCV_RHCT_HART_INFO_NODE_DATA(13),
    RISCV_RHCT_HART_INFO_NODE_DATA(14),
    RISCV_RHCT_HART_INFO_NODE_DATA(15),
  },
};

VOID * CONST ReferenceAcpiTable = &Rhct;
